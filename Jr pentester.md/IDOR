## 🔐 IDOR (Insecure Direct Object Reference)

**Definition**:  
IDOR occurs when internal object references (like user IDs, file names, or record numbers) are exposed and not
properly protected. This allows attackers to modify the references and access data or functionality they should not have access to.
### 🔄 Horizontal Privilege Escalation

**Definition**:  
A user accesses the data or actions of another user **at the same privilege level**.
**Example**:
GET /profile?user_id=104
If you change it to:
GET /profile?user_id=105
...and can view someone else's profile — that’s horizontal escalation.

**Real-World Scenarios**:
- A customer viewing another customer’s orders
- A student accessing another student’s report card
- A user downloading someone else’s private file

---

### ⬆️ Vertical Privilege Escalation

**Definition**:  
A lower-privileged user performs actions or accesses data **meant for higher-privileged users**, like admin or moderator.

**Example**:
A user tries:
POST /admin/delete-user?id=202
And it works — meaning the user was able to perform an admin-level action — this is **vertical privilege escalation**.

**Real-World Scenarios**:
- A user editing other users' data via admin endpoints
- A customer issuing refunds
- A guest user gaining access to admin dashboard

---

### 🛡️ How to Prevent

- Always verify **ownership and roles** on the backend
- Avoid exposing direct IDs to users (use UUIDs or tokens)
- Implement **Role-Based Access Control (RBAC)**
- Test APIs and endpoints for both types of privilege escalation

---

### 🧪 Tools for Testing

- Burp Suite
- Postman
- OWASP ZAP
- Fiddler
- Browser DevTools

---

> 🧠 Pro Tip:  
Always assume **any client input can be tampered with**. Never trust user-provided object IDs or roles. Verify everything on the server.


